 ------
 Introduction
 ------
 Dan T. Tran
 ------
 2009-01-15
 ------


Database Upgrade Maven Plugin

  This plugin lets you incrementally upgrade your project's database schema and data during your development/product lifecycle.
  You can also use it's core component, {{{../dbupgrade-core}dbupgrade-core}}, to perform your application's database 
  upgrade at startup which happens quickly if no newer upgrade is detected.
  

* Goals Overview

  There are 2 upgrade methods and one clean up method.

  * {{{./generic-upgrade-mojo.html}dbupgrade:generic-upgrade}}
    lets you hook up your global pre-upgrade, incremental upgrades, and finally global post-upgrade using both java and SQL files 
    in your Java resources to a database of your choice ( multiple database types supported ). Each incremental upgrade has an associated version 
    number to be stored in your configurable database version table. DBUpgrade uses your database version's value to 
    pickup the next upgrade in your java resource, if any.

  * {{{./filelist-upgrade-mojo.html}dbupgrade:filelist-upgrade}}
    lets you hookup your incremental sql scripts to upgrade a database of your choice ( multiple database types supported ). The 
    script locations can be contained in a text file ( ie the text file contains a list of SQL script paths ) or can be 
    generated recursively from a supplied directory in lexicographical order of their names. After a SQL script is 
    executed, its name is stored in your configurable database's version table. DBUpgrade uses your database version's 
    value ( a SQL script name ) to pickup the next upgrade script, if any.

  * {{{./clean-database-mojo.html}dbupgrade:clean-database}}
    Use this goal to clean your database via a provided script
  
  []
  
* Usage

  Instructions on how to use the Database Upgrade Maven Plugin can be found on the {{{./usage.html}usage page}}.


* Examples

    See junit test for samples 

